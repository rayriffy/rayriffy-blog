name: Deployment for Staging

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: macOS-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v1
      - name: 'Init: Summon NodeJS'
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: "Cache: node_modules"
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ env.cache-name }}-
            ${{ runner.OS }}-node-
      - name: 'Init: Install yarn'
        run: |
          curl -o- -L https://yarnpkg.com/install.sh | bash
      - name: 'Init: Install dependencies'
        run: |
          yarn install
      - name: 'Test: Type checking'
        run: |
          yarn workspace gatsby-theme-rayriffy-blog test:types
      - name: 'Test: Code linting'
        run: |
          yarn workspace gatsby-theme-rayriffy-blog test:lint
  deploy:
    needs: test
    runs-on: macOS-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v1
      - name: 'Init: Summon NodeJS'
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: "Cache: node_modules"
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ env.cache-name }}-
            ${{ runner.OS }}-node-
      - name: 'Init: Install yarn'
        run: |
          curl -o- -L https://yarnpkg.com/install.sh | bash
      - name: 'Init: Install dependencies'
        run: |
          yarn install
      - name: "Build: Trigger build site"
        env:
          GATSBY_ENV: "staging"
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
        run: |
          yarn workspace website build
      - name: "Deploy: Upload to Netlify"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_STAGING_SITE_ID }}
        run: |
          yarn workspace website deploy --message "Automatic deployment from GitHub Actions"
      - name: "Artifacts: Upload"
        uses: actions/upload-artifact@v1
        with:
          name: rayriffy-blog-staging
          path: packages/website/public/
